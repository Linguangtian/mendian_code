<?php
 goto p4KOs; p4KOs: define("\122\x4f\x4f\x54\137\120\x41\124\x48", IA_ROOT . "\x2f\x61\144\x64\157\x6e\163\x2f\163\x75\144\165\x38\137\x70\x61\x67\145\57"); goto JBA6x; JBA6x: header("\103\x6f\x6e\164\x65\156\164\x2d\x74\x79\160\x65\x3a\164\x65\170\164\57\x68\164\155\154\x3b\40\x43\x68\x61\x72\163\x65\164\75\165\x74\x66\55\x38"); goto vuItV; vuItV: class WxpayService { protected $mchid; protected $appid; protected $appKey; protected $apiKey; protected $uniacid; public $data = null; public function __construct($mchid, $appid, $appKey, $key) { goto vRFJE; oLMTR: $this->apiKey = $key; goto i1qRm; O_wkJ: $this->appKey = $appKey; goto oLMTR; vRFJE: $this->mchid = $mchid; goto alMLa; alMLa: $this->appid = $appid; goto O_wkJ; i1qRm: } private function ToUrlParams($urlObj) { goto gol0A; Aj73g: $buff = trim($buff, "\x26"); goto JMbBR; JMbBR: return $buff; goto kfF3d; gXpDa: foreach ($urlObj as $k => $v) { goto Ucs5v; Qauah: Cv2ly: goto PB4_F; LTVA8: $buff .= $k . "\x3d" . $v . "\46"; goto Qauah; PB4_F: ODTe1: goto fiPxZ; Ucs5v: if (!($k != "\x73\151\x67\x6e")) { goto Cv2ly; } goto LTVA8; fiPxZ: } goto JlRmV; JlRmV: XBosP: goto Aj73g; gol0A: $buff = ''; goto gXpDa; kfF3d: } public function createJsBizPackage($openid, $totalFee, $outTradeNo, $trueName, $uniacid) { goto Rkj5x; Eje5L: nTs1t: goto F73bQ; WzJ_f: $unified["\163\x69\x67\x6e"] = self::getSign($unified, $config["\153\145\x79"]); goto xE5EN; j36K_: if (!($unifiedOrder->return_code != "\123\x55\103\x43\105\123\x53")) { goto zATT5; } goto PLhyw; r3kFe: B4ljx: goto FTrgx; Rkj5x: $ip = $_SERVER["\x53\105\x52\126\x45\122\137\x41\104\104\122"]; goto HvNdO; bHN0F: LlbD_: goto RLcW_; MqtXN: die("\346\262\xa1\346\x9c\211\350\xaf\xa5\346\216\245\xe5\217\xa3\346\x9d\203\xe9\231\x90"); goto bHN0F; ofKi_: return true; goto tWNfW; n83fP: doZxw: goto XB_xG; vKCD6: if ($unifiedOrder->err_code == "\116\x4f\137\101\125\124\x48") { goto HiRmj; } goto LUS9e; LUS9e: if ($unifiedOrder->err_code == "\x41\x4d\117\x55\116\124\137\114\111\x4d\111\124") { goto B4ljx; } goto qTzF3; XB_xG: goto gnPmu; goto r3kFe; YMigH: die($unifiedOrder->err_code); goto RwxBp; qcCFj: HiRmj: goto MqtXN; CjG5t: die("\xe8\xaf\267\xe6\xa3\x80\346\x9f\xa5\xe7\xb3\273\347\273\x9f\55\76\345\260\x8f\xe7\xa8\x8b\xe5\272\x8f\xe8\256\xbe\xe7\275\256\55\x3e\346\x94\257\344\273\230\350\xae\276\xe7\xbd\256\x2d\x3e\344\xbc\x81\xe4\xb8\x9a\344\273\230\xe6\254\276\350\256\276\xe7\xbd\xae"); goto K6MYN; NvDaN: $unifiedOrder = simplexml_load_string($responseXml, "\123\151\x6d\x70\x6c\x65\130\115\114\105\154\x65\155\x65\156\164", LIBXML_NOCDATA); goto Q3hLs; Oy5W4: goto LlbD_; goto qcCFj; FTrgx: die("\351\207\x91\351\xa2\x9d\350\xb6\x85\xe9\231\220"); goto W3TPW; oX6GE: $unified = array("\x6d\143\150\137\141\160\160\x69\144" => $config["\141\160\160\151\144"], "\155\143\x68\x69\x64" => $config["\x6d\x63\x68\137\x69\x64"], "\x6e\x6f\156\143\x65\137\x73\x74\162" => self::createNonceStr(), "\x6f\x70\145\156\151\x64" => $openid, "\143\150\145\143\153\x5f\156\x61\155\145" => "\116\117\137\x43\110\105\x43\x4b", "\x72\145\x5f\165\x73\145\x72\x5f\x6e\141\x6d\145" => $trueName, "\160\141\162\x74\156\x65\162\137\164\162\141\x64\145\137\x6e\x6f" => $outTradeNo, "\163\x70\x62\151\154\x6c\137\x63\x72\x65\x61\164\x65\137\151\160" => $ip, "\x61\155\157\x75\x6e\164" => intval($totalFee * 100), "\x64\x65\x73\x63" => "\344\xbb\x98\346\254\xbe"); goto WzJ_f; HvNdO: $config = array("\155\143\x68\x5f\x69\144" => $this->mchid, "\x61\160\160\x69\x64" => $this->appid, "\x6b\145\x79" => $this->apiKey); goto oX6GE; M0Fgc: T5_Dk: goto q7aRV; QqcTh: fr1t6: goto Rtazu; PLhyw: die($unifiedOrder->return_msg); goto r9mKL; q7aRV: die("\xe5\x8f\x82\xe6\x95\260\xe9\224\x99\350\xaf\xaf"); goto n83fP; K6MYN: qne0f: goto j36K_; Q3hLs: if (!($unifiedOrder === false)) { goto qne0f; } goto CjG5t; Rtazu: R1sNP: goto ofKi_; r9mKL: zATT5: goto N7ihK; F73bQ: die("\xe6\202\250\347\x9a\x84\344\273\230\346\xac\276\xe5\xb8\220\345\217\267\xe4\xbd\231\xe9\xa2\235\xe4\xb8\215\xe8\xb6\xb3\xe6\x88\226\350\265\204\xe9\x87\221\346\x9c\xaa\xe5\210\xb0\xe8\264\xa6"); goto QqcTh; qTzF3: if ($unifiedOrder->err_code == "\x50\x41\122\101\x4d\x5f\x45\122\122\117\x52") { goto T5_Dk; } goto YMigH; xE5EN: $responseXml = $this->curlPost("\150\x74\x74\x70\x73\72\x2f\57\141\x70\151\56\x6d\143\150\x2e\x77\x65\151\x78\151\x6e\56\161\x71\56\143\x6f\x6d\57\x6d\155\160\x61\x79\155\x6b\x74\x74\162\x61\156\163\146\x65\x72\x73\x2f\160\x72\x6f\155\x6f\x74\151\157\156\x2f\164\162\141\x6e\x73\146\x65\x72\163", self::arrayToXml($unified), $uniacid); goto NvDaN; RLcW_: goto fr1t6; goto Eje5L; RwxBp: goto doZxw; goto M0Fgc; Oty4K: if ($unifiedOrder->err_code == "\x4e\117\x54\x45\116\117\125\107\110") { goto nTs1t; } goto vKCD6; N7ihK: if (!($unifiedOrder->result_code != "\123\x55\103\103\105\123\123")) { goto R1sNP; } goto Oty4K; W3TPW: gnPmu: goto Oy5W4; tWNfW: } public static function curlGet($url = '', $options = array()) { goto AxVQ8; p_PKP: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); goto IK3pJ; ve9V7: curl_setopt($ch, CURLOPT_TIMEOUT, 30); goto naENE; uDwzL: V9Neu: goto p_PKP; blGw4: $data = curl_exec($ch); goto nDqaz; IK3pJ: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); goto blGw4; bVOsN: curl_setopt_array($ch, $options); goto uDwzL; AxVQ8: $ch = curl_init($url); goto EBkl1; h2pN2: return $data; goto J8uvF; EBkl1: curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); goto ve9V7; nDqaz: curl_close($ch); goto h2pN2; naENE: if (empty($options)) { goto V9Neu; } goto bVOsN; J8uvF: } public function curlPost($url = '', $postData = '', $uniacid, $options = array()) { goto EZffh; Pd04y: curl_close($ch); goto gFP9w; EZffh: if (!is_array($postData)) { goto GKKI2; } goto L0Nfv; C2WQZ: curl_setopt($ch, CURLOPT_SSLCERT, ROOT_PATH . "\103\x65\162\164\57" . $uniacid . "\x2f\141\160\x69\143\x6c\151\x65\x6e\x74\x5f\x63\x65\x72\164\56\x70\x65\x6d"); goto RIUsr; hL2qw: $ch = curl_init(); goto kFMNO; RIUsr: curl_setopt($ch, CURLOPT_SSLKEYTYPE, "\x50\x45\x4d"); goto YWPdR; DQDe1: curl_setopt($ch, CURLOPT_POSTFIELDS, $postData); goto vQHOj; CKBQj: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); goto JG5pY; YWPdR: curl_setopt($ch, CURLOPT_SSLKEY, ROOT_PATH . "\103\x65\x72\x74\57" . $uniacid . "\57\x61\160\151\x63\x6c\151\145\156\x74\x5f\x6b\145\171\56\160\x65\x6d"); goto B408G; JG5pY: curl_setopt($ch, CURLOPT_SSLCERTTYPE, "\120\105\115"); goto C2WQZ; B408G: $data = curl_exec($ch); goto Pd04y; gFP9w: return $data; goto aAgEp; P6gSZ: curl_setopt_array($ch, $options); goto laKcw; sI02j: GKKI2: goto hL2qw; kFMNO: curl_setopt($ch, CURLOPT_URL, $url); goto v2ODh; GXp6t: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); goto CKBQj; v2ODh: curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); goto Ydhh5; laKcw: Th0am: goto GXp6t; Ydhh5: curl_setopt($ch, CURLOPT_POST, 1); goto DQDe1; vQHOj: curl_setopt($ch, CURLOPT_TIMEOUT, 30); goto x1dom; x1dom: if (empty($options)) { goto Th0am; } goto P6gSZ; L0Nfv: $postData = http_build_query($postData); goto sI02j; aAgEp: } public static function createNonceStr($length = 16) { goto EihqL; EihqL: $chars = "\141\x62\143\x64\145\146\x67\x68\151\152\153\x6c\x6d\x6e\x6f\x70\x71\x72\x73\164\x75\x76\167\170\x79\x7a\101\102\103\x44\105\x46\107\110\111\112\x4b\x4c\115\x4e\117\x50\121\122\x53\x54\x55\x56\127\x58\x59\x5a\x30\x31\62\63\64\65\x36\67\x38\71"; goto qiGJx; yLBUP: d3FIZ: goto sjmJc; SFbvE: goto eEzmX; goto wcZe1; qiGJx: $str = ''; goto aV2hj; tieMw: eEzmX: goto TpVir; On2w2: return $str; goto QEOWQ; lS1ZG: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto yLBUP; TpVir: if (!($i < $length)) { goto wJS5A; } goto lS1ZG; aV2hj: $i = 0; goto tieMw; sjmJc: $i++; goto SFbvE; wcZe1: wJS5A: goto On2w2; QEOWQ: } public static function arrayToXml($arr) { goto eyEES; R4BO8: foreach ($arr as $key => $val) { goto o3B3S; zOHAj: uZqUB: goto EbcIX; iZc5N: Yf4ME: goto zOHAj; o3B3S: if (is_numeric($val)) { goto ttNDz; } goto s3YsX; EAXyQ: ttNDz: goto dSYAj; dSYAj: $xml .= "\74" . $key . "\x3e" . $val . "\74\x2f" . $key . "\x3e"; goto iZc5N; s3YsX: $xml .= "\x3c" . $key . "\x3e\74\41\x5b\x43\104\x41\x54\x41\x5b" . $val . "\x5d\x5d\x3e\74\57" . $key . "\76"; goto EmJWk; EmJWk: goto Yf4ME; goto EAXyQ; EbcIX: } goto Yh0we; Yh0we: ytZHg: goto VOkUj; eyEES: $xml = "\74\x78\155\154\x3e"; goto R4BO8; VOkUj: $xml .= "\x3c\x2f\170\155\x6c\x3e"; goto eAFsw; eAFsw: return $xml; goto fJwM6; fJwM6: } public static function getSign($params, $key) { goto xNvT0; CZYx3: $signStr = strtoupper(md5($unSignParaString . "\x26\153\145\171\75" . $key)); goto DTHRQ; xNvT0: ksort($params, SORT_STRING); goto KUCbH; DTHRQ: return $signStr; goto KXooa; KUCbH: $unSignParaString = self::formatQueryParaMap($params, false); goto CZYx3; KXooa: } protected static function formatQueryParaMap($paraMap, $urlEncode = false) { goto yh1ns; Uwmm8: $reqPar = ''; goto E0_5B; bg7lV: VrngA: goto Uwmm8; yh1ns: $buff = ''; goto m5bWJ; xH6ZA: return $reqPar; goto jlQuZ; LiFWx: $reqPar = substr($buff, 0, strlen($buff) - 1); goto WSH7Z; E0_5B: if (!(strlen($buff) > 0)) { goto w_iYb; } goto LiFWx; m5bWJ: ksort($paraMap); goto nmK1A; nmK1A: foreach ($paraMap as $k => $v) { goto D7vGe; YCg_V: $v = urlencode($v); goto wXUy0; wXUy0: LV_QK: goto wjVls; tgWo3: VviVP: goto Fx1lM; wKCjx: if (!$urlEncode) { goto LV_QK; } goto YCg_V; wjVls: $buff .= $k . "\x3d" . $v . "\46"; goto m20Ju; m20Ju: BiBFx: goto tgWo3; D7vGe: if (!(null != $v && "\x6e\x75\x6c\x6c" != $v)) { goto BiBFx; } goto wKCjx; Fx1lM: } goto bg7lV; WSH7Z: w_iYb: goto xH6ZA; jlQuZ: } }